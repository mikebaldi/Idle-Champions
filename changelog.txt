August 14, 2025
    Added latest version check to the Addons window.
        Edit Settings.json in the main SH folder and change/add "CheckForUpdates":0 to disable.
    Added option to add a proxy server in Settings.json for server calls.

August 11, 2025
    Fixed new bug with dictionary objects that made it into the last update.
    Fixed memory reads that tried to check if a champion was fully leveled, but lost their reference values in the dll.
    Updated teh GameObjectStructure with some significant changes.
        - Cleaned up __Get() code and broke functionality into smaller functions for better readability.
        - Added "__version" as new variable for checking a collection's version. Requires Imports update.
        - Added caching to volatile dictionaries which resets on their version updating rather than resetting on every read.
        - Added new Helper functions DoesCollectionNeedReset and ResetCollection utilizing the version additions above.
       
August 6, 2025
    Fixed issues with pointer addresses not refreshing properly.
    Fixed multiple performance slowdowns.

August 1, 2025
    Updated Readme.md.

August 1, 2025
    Fixed HewMaan handler.
    Fixed some potential infinite recursion locations.
    Updated imports to use new form. Requires updated Importer to generate imports. Generates warnings for mismatched imports/script versions.
    updated ActiveEffectKeyHandler to reduce clock cycles.
        -Note: Refresh will now take a hero handler and only refresh that handler.

April 11, 2025
    Updated 64 bit Imports for v618.2. (Steam only)
    Fixed methods that used the now removed variable of "allUpgrades".

December 10, 2024
    Updated 64 bit Imports for v600. (Steam only)
    Updated pointers for EGS v600.

November 6, 2024
    Updated 64 bit Imports for v596. (Steam only)
    Updated pointers for EGS v596.
    
August 17, 2024
    Updated 64 bit Imports for v588. (Steam only)
    Updated stats addon to account for Blessing of Mechanus.

August 14, 2024
    Added Ellywick hero functions.
    Added Steam v587 pointers.
    Updated MemoryFunctionsFullRead to be able to read text based arrays for hero handlers.
    Updated Addons.md.

August 3, 2024
    Updated 64 bit Imports for v587. (Steam only)
    Merged Emmote's pull request to update stats addon to show current tally of runs for Hybrid runs.
    Merged EoD's pull request to fix malformed saves that can cause recovery attempts for failed runs to fail.
    Merged EoD's pull request to update Pointer/Offset documentation from PDF to markdown.

June 5, 2024
    Merged ImpEGamer's fix for modron reset check.
    Updated ActiveEffectKeyHandler to check for new effectKeysByHashedKeyName value since old one was removed on steam.
    Updated 64 bit Imports for v580. For Steam ONLY which uses the new effectKeysByHashedKeyName variable.

April 24, 2024
    Merged scancode override file PR request.
    Updated Nerds addon location in Addons.md.
    Added sleeps to two busy waiting while loops.
    Updated the KeyHelper write function to default to using the backtick character. Previous scancode is commented out.

March 30, 2024
    Fixed reading Briv's slot 4 enchant level on steam version.
    Fixed click damage not working on non us-en keyboard layouts.

March 29, 2024
    Added backwards compatible IC_UpdateClass_Class to allow old addons to function while addon developers update addons.
    Updated 64 bit Imports for v569. (Steam Only)

March 21, 2024
    Released version 4.0.0 (see news for changes).
    Updated 64 bit Imports for v567. (Steam only)
    Updated pointers for Steam v567.
    Updated 64 bit Imports for v568. (Steam Only)

December 6, 2023
    Updated 64 bit Imports for v553.
    Updated EGS pointers for v553.

December 2, 2023
    Updated 64 bit Imports for v552.
    Updated Addons.md.

November 26, 2023
    Updated 64 bit Imports for v551.
    Fixed bug where reading if a champion has all its upgrades would fail after using fkeys (Thanks ImpEGamer).
    Fixed briv ilvl function not including base level of 1 (Thanks ImpEGamer).
    Fixed a a number of issues with reading from certain dictionaries that would cause memory leaks.

November 22, 2023
    Updated 64 bit Imports for v550.
    Updated ultimate cooldown timer reads to use the new variable.

November 17, 2023
    Added protections from reading bad values with Dialog Manager.

November 14, 2023
    Updated 64 bit imports for v549.
    Updated Addons.md.
    Fixed tooltips showing up in windows they were not intended to.

November 10, 2023
    Added Nrakk hero handler.
    Updated 64 bit imports for v547.

November 7, 2023
    Added RushWait that will wait at start of run for Thellora's Rush to trigger.
    Removed Jimothy addon.
    Added a safety check for AutoDetect so when Briv's skip chance cannot be read it uses a default of 100% instead of setting 99 as the expected stacks.
    Added sanity checks to list size memory reads, especially in inventory view.
    Updated AddonManagement to notify users when it detects that addons have been updated and to use the updated addon version for saved enabled addons.
    Fixed possible cause of memory bloat.
    Fixed deleted addons showing as blank line in Addon Management.

November 4, 2023
    Updated Chest Purchaser addon to use defines from the server.

November 3, 2023
    Updated 64 bit imports for v546.
    Updated Steam/EGS pointers for v546.

November 1, 2023
    Updated 64 bit imports for v544.
    Added a setting to manually set Briv's jump value.
    Added setting to disable use of haste in calculations to determine when to stack (disables double runs).
    Added check for Thellora rush when using auto-calc setting.
    Updated default addons to be Addon Management | About | Briv Gem Farm | Game Location Settings | Stats.
    Added a section to the about tab that lists currently enabled addons.
    Added pointer handlers for the game's data in UserData and UserStatHandler (unused).
    Added Thellora Hero Handler.
    Fixed several bugs with reading dictionaries, most notably how Quads are handled.
    Fixed bug with normal Quad reads.
    Added error message for when trying to start the game with a bad game location setting.
    Added Resets to imports (request by ImpEGamer)

October 5, 2023
    Added champion ID Memory Reads.
    Updated 64 bit imports for v540.
    Added code in InventoryView that can be enabled for debugging champion definitions.
    Updated GetHeroHandlerIndexByChampID to handle missing ID 137. (Thanks Emmote)

October 4, 2023
    Added AHK version info to the about addon.

September 21, 2023
    Fixed champion list not being correct after ID 134.
    Fixed bug that would exclude game windows with "33" in the title when sending key inputs.
    Updated Imports to v535.

September 13, 2023
    Fixed a memory leak/ui freeze bug. (Thanks Ismo/Arno for helping track it down)
    Added more sanity tests for certain functions to prevent leaks or recursion crashes.
    Added ActiveEffectKey for JimMagicalMysteryTourHandler to allow reading stacks.

September 3, 2023
    Added sanity checks to memory functions that perform loops based on memory reads.
    Updated Steam/EGS pointers for v533. (Sorry Kartridge/CNE users)
    Fixed a bug that was causing a memory leak. (Thank you ImpEGamer for helping track it down)

September 2, 2023
    Added an option to copy EGS launch code instead of game exe location in game location settings.
    Updated ServerCalls version number.
    Updated 64 bit Imports for v533.

August 22, 2023
    Updated ServerCalls to respect the play server switches.
    Updated ServerCalls to limit server switch attempts to three.
    Updated 64 bit Imports for v531.

August 19, 2023
   Updated 64 bit Imports for v530.

August 8, 2023
    Updated 64 bit Imports for v527.
    Added function to show Briv's slot 4 item level.
    Added briv's slot 4 ilvl memory read to the BrivFunctions secondary extension of MemoryFunctions addon.

July 21, 2023
    Added memory functions for reading champion gear data.
    Added buttons to BrivGemFarm to use the byteglow API to calculate Average and Maximum stacks.
    Updated Addons.md.
    Fixed a bug in conflict detection for the class updater where a base class did not know its name.
    Changed default settings for AutoCalculateBrivStacks, TargetStacks, and RestoreLastWindowOnGameOpen.
    Updated 64 bit Imports for v526.

July 19, 2023
    Updated 64 bit Imports for v525.
    Added an attempt to stop Briv Gem Farm in a stable state when pressing stop the stop button.
    Added a conflict check to UpdateClassFunctions.
    Fixed a bug where online stacking could trigger game stuck even when it completed successfully.

July 6, 2023
    Added pointers for Steam v523. (508-DM copy)

June 23, 2023
    Added information about current script memory type (64/32) to error messages.
    Updated 64 bit Imports for v521.
    Added pointers for Steam v521. 

June 19, 2023
    Refactored Addon Management to fix bugs and simplify logic.

June 16, 2023
    Fixed bug with addon ordering not loading correctly. (Thanks ImpEGamer)
    Updated 64 bit Imports for v520.
    Added current zone to game is stuck message restart message.

June 14, 2023
    Fixed some edge case stack counts that could cause issues. (Thanks ekstergans)
    Fixed Nodrom typos.
    Updated how stack saves work on modron reset so the script doesn't hang before leveling champions on zone 1 if there's a network/server problem.
    Reverted https usage to http due to some connection issues.

June 4, 2023
    Updated default play server from ps23 to ps22 since ps23 was shut down.
    Updated timeouts on save calls to help reduce script lag on modron reset.
    Updated 64 bit Imports for v517.

May 20, 2023
    Updated BrivGemFarm to open up to 1000 chests at once on stack restart.
    Updated BrivGemFarm to open how many chests there are time for instead of not opening any if the max can't be opened.
    Updated ChestPurchaser addon to decrement count by 1000 instead of 99 when opening chests.
    Updated ServerCalls to accept up to a maximum of 1000 chests per OpenChest call.

May 5, 2023
    Updated chest open call to use simple 1s estimate for chests now that chest opening speeds have been dramatically increased server side.

April 29, 2023
    Fixed bug where taking longer than 10s for a process to start could continue launching copies of the game until the full timeout happens.
    Updated 64 bit Imports for v512.

April 23, 2023
    Updated the save profile window to open over the Script Hub windows instead of the top left of the screen.
    Fixed bug with GetHeroNextUpgradeIsPurchased memory read not reading the correct seat.
    Fixed edge case bug where script could fail when min stack zone is equal to the minimum area possible for the stack zone.
    Removed the previousZoneStartTime reset in StackNormal so it can no longer get stuck in an infinite loop of trying to stack but skipping it.
    Updated AvoidRestackTest to use simpler cases that are also more fitting to auto detect stack settings and be named ShouldAvoidRestacks.
    Removed ElapsedTime reset in StackNormal to allow it to run out of time if needed.
    Added sleep timers to busy waits in StackNormal and StackOffline.
    Moved the stacks check to StackRestart from StackFarm. (It already exists in StackNormal).
    Added memory read for the name of the object adding a timescale multiplier. (Does not work for all timescale types).

April 22, 2023
    Fixed bug with calculating stacks to reach zone where jumps were being multiplied by 1.15 instead of stacks being multiplied by 1.15.
    Updated worst case calculations for AutoDetect, especially around 1j briv.
    Fixed bug with Loop text not showing the correct theme color.
    Fixed bug with InventoryView not properly using new JSON library.

April 18, 2023
    Added new pointers for v508.
    Updated Imports for v508.
    Fixed RestoreLastWindowOnGameOpen bug.
    Fixed bugs with not showing correct messages with unsaved profiles.
    Added a warning when switching profiles without saving.
    Fixed theme colors not working after switch to new JSON library.

April 15, 2023
    Fixed MemoryFunctions height adjustment for the tab control.
    Updated json.ahk to use library with significantly faster parsing.
    Updated Memory View to use theme default text color.
    Refactored OpenIC and related functions.
    Removed dialog check on game start until a solution is found for DialogManager pointers being off by 0x10 for some people.
    Added a sanity check on list size reads for GetDialogSlotByName and GetBlessingsDialogSlot.

April 13, 2023
    Fixed bugs with Gem Farm Window Position setting.
    Added a link to change pointers to the About tab.
    Fixed MemoryFunctions height adjustment for the tab control.

April 12, 2023
    Added BPH adjustment based on Nordom XP.
    Fixed code warnings (non-functional changes).
    Fixed input boxes on Jimothy tab not using InputBoxTextColor.
    Fixed profile delete leaving profile selection blank.
    Fixed bug that allowed addons to be moved below addons that depended on it.

April 11, 2023
    Fixed bugs and added improvements for new features such as the gem farm profiles.
    Added sleeps to many busy wait cycles to reduce CPU usage.
    Removed Potato addon (above fixes implement potato into the default script).

April 8, 2023
    Added Profiles for BrivGemFarm.
    Fixed how the chest purchaser ComboBox functions.

April 7, 2023
    Added incremental area increase for failed stacking to help prevent seasonal buffs or infinite stacking issues.
    Updated imports to include typing for collections. 
    Updated Dictionary and List lookups to use appropriate memory sizes.
    Updated GameObjectStructure to handle differing memory based on collection types.
    Updated MemoryFunctions to remove special case dictionary lookups and use new GameObjectStructure.
    Added Familiar-related functions to MemoryFunctions.
    Added field familiar checks on script startup. No more gem farm with familiars in W formation.
    Renamed GetChestCountByID to ReadChestCountByID.
    Refactored start up checks so it no longer continues to show all failed checks when one is canceled.
    Added an Imports Version function in SharedFunctions.
    Added IsChampInFavoriteFormation function to SharedFunctions.
    Modified worst case stacking setting to be 1.15x average instead of actual worst case and uses best case for 99.6% or higher jumps.
    Added check for the failed offline progress message that will instantly restart instead of waiting for timeout of 90s.

April 4, 2023
    Updated error messages for needing admin or running script from protected location like Program Files.
    Updated Chest Purchaser addon. (Try the filter in dropdown boxes).
    Fixed Briv not respecting walk/jump settings after stacking.

April 3, 2023
    Removed single setting for enabling server calls.
    Refactored chest buying/opening functions for BrivGemFarm. (Fixes some minor bugs with counts and purchasing).
    Optimized chest name reading for use with Inventory and Chest Purchaser addons.
    Updated SharedFunctions to be able to use g_UserSettings. (Required for memory read).

April 2, 2023
    Added a version requirement to Script Hub to give a more informative error when running AHK without switch statements or running AHK 2.0.
    Reverted how online stacking works from a boss zone.
    Offline stacking will fall back a zone to stack if killing the boss fails.
    Fixed GUI issues such as incorrect text color and poor text alignment with multiple tab rows.
    Fixed ResetCollections function for pointer classes.
    Fixed lookup of champID 107 returning ID 106.

April 1, 2023
    Added Theme Manager addon.
    Added Active flag memory read for Dialogs.
    Added memory read function to find a slot by Dialog name.
    Fixed bugs with PatronID reads.

March 30, 2023
    Fixed bug where game version was not loading on about page.
    Updated Imports for v504. (Kartridge/CNE still on 503).
    Updated Pointers for Steam (v504), EGS (v504), CNE (v503), Kartridge (v503).
    Added code to help prevent loss of patron.
    Added more documentation to Example addon:
        Inter-script communications.
    Updated ShouldDashWait to respect DashWaitBuffer.
    Added new loop string so Retreating to change formation does not get stuck as the last message before a modron reset.
    Removed Autoprogress toggle when going offline. (No longer required).
    Moved where Autoprogress is started after stacking.

March 28, 2023
    Fixed bug in GameObjectRefactor that was not properly saving a reference to the pointer object when cloning.
    Added a warning on BPH when Nodrom is in the party. 
    Added offsets and handler for Nodrom XP added.
    Added offsets for the cooldown timer on ultimates.
    Added ReadUltimateCooldownByItem function to MemoryFunctions.
    Updated modron reset check to force a reset faster if it fails.
    Updated/Added champion upgrade related functions to memory reads.

March 27, 2023
    Updated memory pointers to only build GameObjects once.
    Updated GameObjectStructures to contain a reference to the memory pointer that built it instead of storing is64bit and baseAddress in each object.
    Updated MemoryPointer to use a is64bit field instead of a function.
    Updated this.Memory.GameManager.is64bit() checks to use _MemoryManager.is64bit.
    Added the ability to reset collection offsets (lists/dictionaries).

March 25, 2023
    Updated Example Addon.
        Added documentation and example code for how to build an addon for use with Script Hub. Topics include:
            Addon file structure.
            Script Hub's API.
            Server calls.
            Themes.
            Timers and running them automatically with BrivGemFarm.
            Making functions work in BrivGemFarm (Injection).
            Adding controls to existing addon tabs.

March 23, 2023
    Fixed chest string when stacking to show when buying/opening only one type of chest.
    Simplified ActiveEffectKeyHandler even more.
    Fixed recursion bug.

March 22, 2023
    Updated Version Picker's failed write message.
    Updated 64 bit Imports for v503.
    Fixed bug where loop text was not setting colors correctly.
    Added _Memorymanager class.
        Added Read function to GameObjectStructure to allow Reads to be done from object.Read instead of the MemoryFunction GenericGetValue.
        Moved GetDictIndexOfKey, ConvQuadToString3 functions to GameObjectStructure.
        Added SetNames to GameObjectStructure which will add the key names as a value to each object for debugging purposes.
        Fixed GetDictIndexOfKey to allow keys to be strings.
        Added functionality where looking up a dictionary values can be done with the key value. Uses above function.
        Converted GenericGetValue calls to use Read function.
    Updated FullMemoryFunctions to show champion instead of handler in the list display.
    Updated how Hero Handlers are loaded.
    Added documentation on how to update hero handlers.
    Updated DashWait to use a default of 30s instead of 60s.
    Added buy/sell chest counts to offline stack loop string.

March 20, 2023
    Completely refactored memory read structures.
        Instances of GameObjectStructure can now re-build their structures around list and dictionary indices at run-time.
        Removed GetGameObjectFromListValues and GetGameObjectFromListValues and GetFullGameObjectFromListOrDictValues functions in favor of indexing style.
        Updated MemoryFunctions to use the new style.
        Rewrote multiple functions in MemoryFunctions to be simpler and/or more efficient.
        Added MemoryPointer and StaticMemoryPointer classes which are used by in pointer classes and reduces code reuse.

March 16, 2023
    Added memory read capability for reading the count of wasps from Spurt.

March 12, 2023
    Updated the Example Addon with more sample code and documentation (more coming).
    Fixed theme not applying to GameLocationSettings.
    Added title bar color swapping between dark/light themes.
    Updated LoadTheme to allow a filename of a theme to be passed and used instead of the default.

March 12, 2023
    Added available pointers for Steam v500 (Fixes DialogManager).
    Added memory read for the Welcome Back notification being active.
    Added a safety check to prevent stacking while modron is resetting.
    Fixed double JSON parsing bug.
    Added simple color themes.
        Themes\CurrentTheme.json is the theme currently in use.
        Themes\ includes sample Default and Dark theme settings. Copy contents CurrentTheme.json to update theme.
    Updated Addon Management, Version Picker, and Briv Gem Farm's running window to use the new Themes.
    Fixed dependencies not displaying in Addon info window.
    Updated the .gitignore to ignore settings files.
    Fixed MemoryRead addon to be decoupled from Stats addon. (No longer requires stats addon to update MemoryRead tab automatically when farming gems).
    Added new error message to Chest Purchaser addon when no user details have been loaded.
    Added counting shiny gear per hero back into results from opening chests in the Chest Purchaser addon.

March 7, 2023
    Removed Briv's stack conversion safety call from modron reset since it is unlikely to be helpful anymore.
    Updated some function documentation.
    Updated some functions with nested if statements to be more simplified.
    Updated Gold Chest server call to estimate 6 seconds for 99 chests instead of 7 seconds.
    Updated memory view stats to show skip chance up to 16 decimals instead of just 2. 
    Fixed a bug that was mistakenly showing failed stack conversions.
    Added diagnostic info when in the error when Script Hub fails to parse a settings file.
    Updated 64 bit Imports for v500.

March 5, 2023
    Merged huan's updates to allow for hybrid stacking via new options in BrivGF Advanced tab. See the SETTINGS.md file in the BrivGemFarm addon's folder for descriptions of the new settings.
    Fixed script saying chests were purchased/opened when they weren't. (credit: huan)
    Updated offline message to indicate how many chests were bought/opened while offline stacking. (credit: huan)
    Updated 64 bit Imports for v499.1. 
    Moved ParseChestResults from ServerCalls to shared functions.
    Updated function to save shinies found by hero/slot instead of returning a string.
    Created new function GetToolTipTarget in GUIFunctions for finding the ClassNN value of a control.
    Updated chest purchaser addon to use the new parse function. (This loses functionality to show what champ/slot found a shiny. Will return in the future.)
    Updated the stats tab to show found shinies by champ/slot as a mouseover tooltip on the shiny count.
    Updated some code to better match Script Hub's code styling.
    Updated DoChests to share purchased/opened chest counts in SharedData.
    Fixed a bug that broke failed stacking recovery when Auto detect for stacks is enabled but the value in Target Haste stacks is less than the calculated value. 

February 27, 2023
    Added current pointer version to "About" addon.
    Added MemoryFunctions version to "About" addon.
    Updated VersionPicker to include platform and version in CurrentPointers.json (required for display on about tab). 
    Updated version numbers for updated scripts.
    Added available pointers for Steam v498. (Updated pointer for DialogManager which handles looking up blessings/favor.)

February 24, 2023
    Added available pointers for CNE v497.

February 21, 2023
    Updated 64 bit Imports for v497.
    Added available pointers for EGS v497.
    
February 18, 2023
    Updated shared functions version of ResetServerCall to fix the ps6 bug for any addons that might be using it.
    Updated ServerCalls to use currently working servers as defaults since play servers 1-16 were recently dropped and are currently non-functional. Possibly a temporary change. The default is now ps23.
    Updated timeout values in the ServerCalls class to try and allow for some extra leniency on slow server calls.
    Updated 64 bit Imports for v496.
    Added available pointers for Steam v496. (Fix for chest names not loading after 496 update.)

January 28, 2023
    Updated 64 bit Imports for v490.
    Updated VersionPicker to sort versions numerically.
    Fixed bug where the correct play server was not being read from memory resulting in a using a default of ps6.
    Added potential fix for losing Patron when doing a reset and the patron can not be read from memory.

January 9, 2023
    Updated 64 bit Imports for v485.1

December 23, 2022
    Updated 64 bit Imports for v484

December 8, 2022
    Updated Steam/EGS pointers for v480 so the chest names will load in the chest purchaser addon.
    Updated offsets for v480.
    Fixed a bug that prevented purchasing chests by ID # when the chest purchasing addon was not able to load the chest data from the game.
    Updated Kartridge/CNE pointers for v478.

December 4, 2022
    Merged OfflineBeta branch into main.
    Fixed stacks stats display. Now current run's total starting stacks (Last Reset).
    Updated chest purchasing times be based linearly on number of chests opened, where 0-99 gold chests takes 0-7s and 0-99 silver chests takes 0-3s.
    Updated Imports for v479.

November 12, 2022
    Updated Imports for v476.4
    Updated ShouldDashWait to skip dash wait if Briv is out of stacks of Haste.

November 6, 2022
    Fixed script counting multiple runs when doing a stack restart.

November 5, 2022
    Updated includes for imports to be optional. This allows the script to be loaded with only 64 or 32 bit offsets when only one is needed/available.
    Removed 32 bit imports.
    Updated Imports for v476.
    Updated Offline progress functions to use new offline handler in the recent game update.
    Updated StackRestart to turn autoprogress back on before closing IC.

October 22, 2022
    Updated Imports for v474.1.
    Added bounds check for AffectKeyHandler so bad memory reads do not cause a freeze.
    Updated pointer database (Beta / Steam / EGS).
    Removed an unused/deprecated function for Omin.

October 6, 2022
    Updated Imports for v472.1

September 30, 2022
    Updated Imports for v472.
    Fixed reads that would be broken for champions with IDs larger than 106. (e.g. Egbert)
    Added Group Box to version picker to show it's selecting pointers.
    Fixed pointer selection being incorrect for some pointers in VersionPicker.
    Updated pointer database.

September 24, 2022
    Updated Imports for v471.

September 22, 2022
    Fixed Omin's Contractual Obligations function to work with game update.

September 12, 2022
    Updated addon and README docs.

September 9, 2022
    Added IsVersionNewer to IC_VersionHelper_Class.
    Updated Imports for v469.
    Updated error message that occurs when failing to read memory when starting BrivGemFarm.
    Removed outdated/nonfunctional ReadTimeScaleMultipliersKeyByIndex function from SharedFunctions.

September 8, 2022
    Fixed unescapable loop when pointer settings cannot be saved.

September 6, 2022
    Updated text in Game Location Settings to be clearer.
    Fixed boss hit counter counting falling back into a boss when it shouldn't.
    Fixed chests gained stats to work as intended (Total of purchased + dropped) instead of useless values.
    Fixed Briv Gem Farm connect button to work in more situations after the Multi-Run update broke them.
    Added a checkbox to disable Champion handlers being loaded by default in FullMemoryFunctions

September 5, 2022
    Updated OpenIC to have better handling of failures to open the game.
    Added minify to JSON functions.

September 4, 2022
    Updated Version Picker to more accurately determine if imports are matching.
    Fixed CNE Stand Alone v467 Pointers.
    Fixed bad initial reads for chests gained. 

September 3, 2022
    Updated Imports for v467.
    Added pointers for CNE Stand Alone v467. Note: Mini-Blessings addon requires removing EGS overlay dlls from the game's plugins folder to function. (EOS DLls)

September 1, 2022
    Added extra icon checks for the Gem Farm Script to handle Windows 7 and Wine better.
    Added settings to save current inventory window checkbox selections between sessions.

August 30, 2022
    3rd party Addons need to be updated for use with IC Script Hub. IdleDragons.exe is no longer hard coded and BrivGemFarm's GUID is no longer static.

August 30, 2022
    Fixed bug that did a hard reset when landing on modron reset with no stacks left.
    Changed: Should now walk to reset if stacks run out within 5 areas of modron reset area.
    Removed Stats for Swaps made this run.
    Added Briv's estimated target stacks to BrivGemFarm stats.
    Updated platform specific readme docs.
    Added enhanced Kartridge support for Briv Stacking.

August 29, 2022
    Added pointer data for Kartridge v465. 
        Note: It is recommended to remove EOSSDK-Win64-Shipping.dll and GfxPluginEOSLoader_x64.dll from \IdleDragons_Data\Plugins\x86_64 for full pointer compatibility.

August 28, 2022
    Changed how the Game Location Settings works.
        - The exe must now be included in the path.
        - A backslash is added to the end automatically when the path ends in "\IdleDragons" (steam) or "\309647" (Kartridge)
        - If no exe is included in the two cases above, it will automatically be added. This is to keep setup consistent with previous versions.
        - The exe is now used for the script to know where to read memory. 
    Updated IC Script Hub to be able to handle renamed a IdleDragons.exe. 
        - The above changes were in part to help facilitate this change.
        - This allows for multiple platforms to be run at the same time as long as the exe names are different. (Still requires 2 copies of the script).

August 26, 2022
    Updated offsets to v465.1
    Updated Version Check script with automatic version detection.

August 23, 2022
    Added a VersionPicker script to allow selection of pointers by platform/version.
    Added button on FullMemoryFunctions to access version change script.

August 20, 2022
    Fixed Autodetect Briv Jump Stacks not working on parties other than the first.
    Fixed chest addon memory error.
    Updated error message that happens when starting the gem farm script when no adventure is started.

August 18, 2022
    Updated MemoryRead objects to be simpler in preparation of handling multiple 64 bit game clients.

August 16, 2022
    Created v463-Steam branch for temporary handling of new Steam 64 bit client.

July 29, 2022
    Added a line to the stats tab that shows the reason the script closed the game last.
    Added more version information to the About tab, including imports version.
    Updated Imports for v461.1 (32/64 bit).
    Updated pointer required for the chest purchasing addon (64 bit).

July 28, 2022
    Updated TestGameVersion to test for full game version including postfix.
    Fixed TestGameVersion to test version for 64 bit properly.

July 27, 2022
    Fixed Briv stack calculations not correctly updating after modron reset if dashwait is disabled.
    Updated docs with minor corrections for recommendations after the Hew nerf.

July 22, 2022
    Fixed some Memory Read tab height issues.
    Added version testing.
    Fixed a case where stacking could occur on zone 1.
    Fixed bug where non-metalborn stack calculations were incorrect.

July 22, 2022
    Fixed various GUI issues and calculations with automatic Briv stack detection.

July 19, 2022
    NEW! Added an automatic Briv stack detection to allow for seamless early stacking and to simplify the gem farm setup.

July 17, 2022
    Fixed how buying/opening chests works. The sleep timer should now correctly start before opening chests instead of after.
    Slightly better messages for chest purchasing/opening when docontinuous option is checked.
    Slightly improved timing when loading game to prevent unnecessary fallbacks.

July 17, 2022
    Corrected the fix from previous version.

July 16, 2022
    Added a potential fix for patron adventures not restarting with their patron.

July 15, 2022
    Updated Gem Farm documentation.

July 14, 2022
    Added timer to close tooltips after 3 seconds when an appropriate control is not being hovered over. This should help with tooltips stuck on screen after alt-tabbing.
    Added messages indicating what the Briv Gem farm script is attempting to do when a button is clicked (Start/Stop/Connect/Save).
    Added PreferredBrivJumpZones advanced setting built off of HenkyPenky's RollBackRecovery modifications.
    IMPORTANT: REMOVED AvoidBosses setting! (Use PreferredBrivJumpZones to avoid bosses).
    Updated Addons links in Addons.md.
    Updated Imports for 32 bit to v457.

July 6, 2022
    Updated pointer for EngineSettings on v456 32 bit (where webroot is stored).
    Removed including unused logging class.
    When starting a gem farm, script requests a play server. This is a redundancy to accommodate load balancing when the game's play server cannot be read from memory.
    Added a call to SetFormation after stacking to try to resolve the issue of the script jumping boss to boss after a rollback that lands on a boss area.
    Added a Debug output for chest opening strings. This allows a savvy user to monitor when shiny gear is obtained from the chest opening calls while gem farming. (These messages will show up in programs such as DebugView).
    Updated Imports for v456 (32 and 64 bit).

July 2, 2022
    Fixed a bug that could cause memory to fail to read for Hero Handlers when the game uses high value memory addresses (int overflow).
    Added protection for hero handlers potentially failing when the IdleGameManager pointer needs to be updated/changed.
    Update to MemoryFunctions for future IdleGameManager memory reading safety.

July 1, 2022
    Reverted pointers for EGS (64-bit) v455.
    Updated offsets/Imports for v455 for 32/64-bit.

June 24, 2022
    Updated pointers for EGS (64-bit) v452.
    Updated pointers for Steam (32-bit) v452.

June 2, 2022
    Updated Readme.md for SharedFunctions.
    Added HewMaan's ultimate ID and CoolDown time to ActiveEffectKeySharedFunctions.
    Updated offsets for v440.1.
    Added ActiveEffectKeyHandlers to memory functions. Note: These will show as -- Error -- unless the associated champion ability is unlocked.
    Added a tab control resize when resizing the GUI.
    Added a List control resize in FullMemoryFunctions when resizing the GUI.
    Added a List control resize in InventoryView when resizing the GUI.
    Fixed game version not showing up in the About addon if the game is open when starting the script.
    Updated Script Version.
    Fixed version reads on About addon.
    Updated Chest Purchaser Addon to give more feedback when purchasing.

May 24, 2022
    Fix for out of memory error when doing continuous chests.

May 22, 2022
    Updated GameObjectStructure for better handling of dictionaries.
    Updated GameObjectStructure to have a function to fully clone another GameObjectStructure.
    Updated GameObjectStructure to have a function that recursively updates all sub-GameObjectStructures list and dict indexes when the list's object has been found.
    Added Memory function to get a GameObjectStructure for a specific champion's OrderedUpgrade list.

May 21, 2022
    Auto-Updates change moved to main branch.
    Updated offsets for IC v439 for both 64 and 32 bit versions.
    Added a fix for DialogManager pointers not working if the EGS overlay DLLs had been deleted.
    Added Omin to ActiveEffectKeySharedFunctions.
    Added Nerds to ActiveEffectKeySharedFunctions.
    Updated Nerds offsets.
    Fixed typo on HeroEffectNames and HeroHandlerIDs for Omin.

May 11, 2022    (Auto-Offsets soft-launch)
    Added Imports generated by ScriptHubImporter.
    Updated MemoryRead class files to utilize the new Imports.
    Updated MemoryFunctions to use the new MemoryRead classes.
    Added ActiveEffectKeyHandler class for Champion abilities. (Replaces EffectKeyHandler)
    Removed EffectKeyHandlersFullRead addon.
    Removed champion EffectKeyHandlers and EffectKeyHandlerClass.
    Added ActiveEffectHandlers for common abilities from Briv, Nerds, Havilar, Omin, and Shandie.
    Renamed GameManager to IdleGameManager to reflect in game class.
    Updated MemoryFunctions addon to utilize MemoryFunctions better.
    Added GetChestNameBySlot(), GetChestIDBySlot(), and ReadChestDefinesSize() functions to MemoryFunctions.
    Updated ChestPurchaser addon to utilize above new functions.
    Added ReadInventoryBuffIDBySlot(), ReadInventoryBuffNameBySlot(), and ReadInventoryBuffCountBySlot() functions to MemoryFunctions.
    Updated MemoryView addon to use above functions.
    Added ReadBaseGameVersion() function to MemoryFunctions.
    Updated to use above function for ServerCalls so it does not break on versions with decimals.
    Updated Pointers for CrusadersGameDataSet and DialogManager for game version v435.
    Updated how GameObject handles lists, dictionaries, and hashsets.
    Updated Jimothy addon to use new ActiveEffectHandlers for Havilar imps.

April 16, 2022
    Added ReadGameLocation and GetWebRequestLogLocation functions to SharedFunctions
    Updated pointers/offsets for EGS v430.
    Updated pointers/offsets for Steam v430.
    Bugfix - Added a check to verify webroot is a valid http string before  updating it. Should help prevent failed chest openings or failed resets on TR.

    Fixed offset for ResetsSinceLastManual which was causing the script to fail to recognize it was on zone 1 instead of modron reset zone.

April 14, 2022
    Updated outdated changelog.
    Updated pointer offsets for EGS v428. (Thanks BCybercell)
        (Pointer/Offsets used for automatic favor conversion addon have not been updated yet)

April 9, 2022
    Updated pointers/offsets for v425.1.

March 26, 2022
    Updated pointers/offsets for v422.4.

March 15, 2022
    Updated pointers/offsets for v421.
    Added ReadActiveMonstersCount function (based on Thatman's suggestion)

March 8, 2022
    Updated pointers/offsets for v420.2.
    Added checkbox toggles for chests/buffs in inventory tab.

Feb 25, 2022
    Updated pointers and offsets for Steam and EGS v420.
    Updated Inventory tab to be significantly faster when loading.

Feb 24, 2022
    Inventory view now combines chests and buffs (potions, contracts, etc.)
    Added Reset Button on the Stats tab.
    Fixed a bug for addons not respecting some dependency versions.
    Set Script Hub to Normal Priority. (Game and Briv Gem Farm still run at High priority)
    Refactor:
        Moved many stats tab functions from BrivGemFarm to BrivGemFarm_Stats.
        Moved GUI code into functions.
        Updated Addon Version numbers.
        Simplified StackRestart()
        Moved chest opening logic to its own function.
        Simplified some GemFarm() loop logic.
        Added g_BrivFarmAddonStartFunctions and g_BrivFarmAddonStopFunctions which will be called whenever BrivGemFarm is run/stopped respectively
    Added SetThemTextColor function to GUIFunctions.

Feb 17, 2022
    Added running miniscript warning when closing script hub.
    Disabled read for GetDialogNameBySlot as the pointers often break and could cause memory read problems.
    Changed MemoryFunction's default secondary to extended instead of Testing since functions in testing might crash script hub.
    Added new memory functions secondary script for testing blessing(favor) dialog since it can come up as an error even if it is not.
    Updated DialogManager pointers/offsets for steam/egs.

Feb 16, 2022
    Check Addons.md for some links to 3rd party addons.
    Created a NerdsWagonHandler and modified the base EffectKeyHandler class.
    Modified GetFormationFKeys function to better handle scenarios where an NPC is saved in the formation.

Feb 15, 2022
    Added function to check conditionals for if Dash should wait.
    Potato converted to a proper addon.
    Added g_BrivUserSettingsFromAddons for adding settings to the GemFarm script's advanced settings display window.
    Code tidying including removing unused includes.
    Added version test function to help test if addons are up to date.
    Addon Manager now tests for minimum version instead of exact version.

Feb 11, 2022
    Fix for an error involving Inventory Reads.
    Updated pointers for chest defines to fix the Chests tab.

Feb 10, 2022
    Updated OfflineProgressHandler offsets for v419.

Feb 9, 2022
    Updated URLs in addons to point to main instead of IC-ScriptHub-Public on github.
    Added a basic Advanced BrivGemFarm Settings tab Addon.
    Added a SETTINGS.md file explaining hidden/advance settings for Script Hub.

Feb 4, 2022
    Dashwait after stacking checks current formation instead of favorite 1.
    Updates to slightly change how stack fails are recorded and prioritized.
    Potential fix for error spam during attempts to update GUI when Gem Farm script abruptly stops.
    Updated GameManager Pointers for v418.2 on steam.
    Updated pointers and offsets for GameSettings on steam to re-enable chest opening in v418.2.

Feb 1, 2022
    Updated how refocus after game load works.
    Added patron compatibility for manual resets.
    Added system/compatibility for "Miniscripts" via BrivGemFarm.
    Small bugfixes, typo corrections, and version updates.

Jan 31, 2022
    Updated Slow/Fast runs to update when using manual reset from ResetZoneBuffer. (Emmes)
    Added WaitForProcess user setting to assist Kartridge users when PID changes. (sycdan)
    Removed timescale modification to the timeout on dashwait since certain problems can cause it to time out early.
    Added potential fix for steam not recognizing it is stuck quickly enough when the platform (e.g. steam) can't connect.
    Added a quick switch back to previously active window. Should reduce game popping up over current window.
    Added DialogManager class including steam/egs offsets for v418.1.

Jan 29, 2022
    Increased FullMemoryView tab's list area size.
    Updated offsets for Steam/EGS v418.1.
    Updated how loop time resets. (Emmes)
    * REVERTED: Updated logic for stacking to accommodate early stackers better. (Emmes)
    Updated Dashwait to occur after stacking to accommodate early stackers better. Use the DashWaitBuffer advanced setting to prevent dashwait after stacking.

Jan 24, 2022
    Addon EffectKey Handler Full Read: A new add on to test effectkey handlers are functioning properly.

Jan 23, 2022
    Addon Jimothy: Revamped v0.2. Expanded functionality to assist in non-jimothy push or variant runs. See Read Me.
    Fix for pathing issue with Addons Manager that could cause addons to not load.

Jan 20, 2022
    NEW! Addon Manager Update from nyze. (Now located by clicking the puzzle piece icon at the top of the window)
    Added a retry for GPH/BPH initial reads if they failed the first time.
    Added some troubleshooting tot he FAQ.md for BrivGemFarm
    Fixed Tab Ordering so it can be reordered in any way using the Addon Manager.
    Updated GUIFunctions.
    Various bug fixes.

Jan 19, 2022
    Added StackFailStates class.
    Updated how various types of run failures are shown and tracked.
    Removed a number of unused functions, classes, and files.
    Updated dev documentation to reflect changes.
    Fixed timer functions so they can be stopped.
    Added protection from saving haste stacks when they fail to read.
    Added ToolTips.
    Fix for infinite stuck while reading offline progress.
    Fix for falling back after stack restarts when it's not necessary.

Jan 18, 2022
    Fix to help recover from W formation.
    Fix to reset the adventure if modron reset times out since modron timeout > stuck timeout.
    Added reset button to Inventory to reset run stats.
    Fix for issue where game gets stuck never opening IC game.
    AddOn: Dash Check removed. Was only meant to be a temporary test/proof of concept.
    Primary documentation updated.

Jan 17, 2022
    Potential Fix for accurate Briv QT detection.
    Fix for too much Q spam while leveling champions.

Jan 16, 2022
    Dash wait method has been revised to verify Dash is active directly from the ability handler in memory.
    The method used to cancel Briv's jump animation has been revised to no longer require swap sleep setting, the setting has been removed.
    The aforementioned method has been relocated to the Shared Function class.
    EffectKeyHandler classes have been reorganized and relocated to the SharedFunctions/Memory folder.
    Removed ForceDashWait setting.
    Replaced DashSleepTime setting with DisableDashWait setting.

Jan 14, 2022
    Updated GUI instructions to ensure they are affecting the correct GUI.
    Removed AddonManagement.json from the repo to prevent overwriting on updates.
    Updated Addon Management to create a new AddonManagement.json on first run.
    Removed Stats from being Required in Script Hub
    Added new Addon to replace required stats tab.
    Updated how ScriptHub prioritizes BrivGemFarm/Stats tab ordering.
    Added basic starting FAQ.

Jan 13, 2022
    Added Addon Manager by nyze. Now addons can be enabled/disabled easily through the GUI.
    Fix for BrivGemFarm required MemoryFunctions addon.
    Added a first run check for Addon Manager.
    EffectKeyHandler classes may now be compatible with EGS.
    Added warning when closing gem farm script.
    Gem Farm script can now be minimized to the tray when clicking x (choose "no" on prompt).
    Gem Farm script GUI will be shown again when pressing the play button if it is already open.

Jan 12, 2022
    Added offsets for where modron formations are stored, as well as FormationCampaignID  and SaveID in the FormationSaveHandler.
    Added memory functions:
        ReadFormationSaveIDBySlot
        ReadFormationCampaignID
        GetActiveModronFormation
        GetModronFormationsSaveIDByFormationCampaignID
        GetCurrentModronSaveSlot
    NEW: FKeys now uses the champions in the formation of the active Modron instead of champions in formation Q to do leveling in BrivGemFarm.
    AddOn: Dash Check. A test/proof of concept for a new system of Effect Key Handlers. Hast test options for Dash, Haste, and Contractual Obligations. Steam only.

Jan 11, 2022
    Added new setting to return dashwaiting capability when at max speed. See (ForceDashWait) to BrivGemFarmSettings.json
    AddOn: Dash Check. A test/proof of concept of a potential alternative method to check of Dash is on. Steam only further testing.

Jan 10, 2022
    Added additional troubleshooting options to message boxes when required champions are not found in the formation.
    Jimothy Addon: Can now be used with non Jimothy formations.
    Fixed gold chest purchases always buying 100, even if only gem limit only allows purchase of 1. (fix by Envy)
    Added a swap to E formation option for helping users deal with stacks failing to convert on modron reset. (``BrivJumpBuffer`` in ``BrivGemFarmSettings.json``)
    Added checks to prevent as many errors as popping up when GUI can't read from Gem Farm Script. (One intentionally left in for debugging purposes.)
    Added a fix for resets triggered by ResetZoneBuffer not resetting the current run timer.
    Added Advanced Settings view option to gem farm script's window.
    Fixed bug where gained chests were showing opened chests instead of purchased chests.
    Fixed bug where first chests opened/bought during the first run were counted in stats when stats should not start until after the first run.
    Fixed two bugs causing shinies to not be counted correctly.
    Server calls should now correctly use the same server as the client.
    Server calls should now correctly use the same platform/network_id as the client.
    Added bypass for game recovery when game loads on zone 1.

Jan 9, 2022
    Updated some default settings.
    Fixed gems not showing in correct column on Briv Gem Farm window
    Added an option to turn off pressing Ctrl when leveling clicks. (See "NoCtrlKeyPress" in Settings.json)
    Added more spam reduction when returning to the game from offline stacking.
    Dashwait has changed from not activating when over halfway to the stack zone to not activating within 30 zones of the stack zone.
    DashWaitBuffer setting in BrivGemFarmSettings.json has been changed to modify the default value of 30.
        WARNING: If currently using a previous version, this setting will need to be edited or DashWait will likely never activate.
    StackFail protection is now activated on every reset (manual or modron). This should help stop lost stacks when in Q formation beyond stack zone. (Testing for verification needed)
    Fixed haste/sb stacks disappearing when game closes (Fix by msde)
    Fixed MemoryRead tab populating with blank data when game closes.

Jan 8, 2022
    Fixed reading uncapped timescale on 64-bit game versions.
    Fixed some settings bugs that popped up when changing how settings were loaded.
    Added a potential fix and extra safety to ensure the party won't get stuck on bosses when swap to e formations setting is unchecked.
    Jimothy Addon: attempt to fix freezing GUI.

Jan 7, 2022
    Buying chests will now buy as many as you have gems for each offline stack farm (up to 100)
    Opening chests will now open as many as you have available each reset (Up to 99) (Within Stack Reset time)
    See new ``AddOns\IC_BrivGemFarm_Performance\SETTINGS.md`` for additional information on new chest buying/opening settings for advanced users.

Jan 6, 2022
    Added UserSettings.ini to .gitignore.
    Fixed numbers sorting incorrectly on Inventory ListView.
    Removed release of keys used to level the champion after they reach their target level. (Allows them to continue leveling during Dashwait)
    Added a setting to hide the Gem Farm Window. Set `"HiddenFarmWindow":1` In BrivGemFarmSettings.json
    Added an Addon that adds sleeps to some functions to reduce CPU load on Potato PCs.
    Added a function to read champ name by ID from memory. (EGS version to come)
    Jimothy Addon: now falls back at least one zone at the end of a jimothy run.
    Jimothy Addon: mod5 checkbox 5 and mod 10 checkboxes 5 and 10 should now properly check and uncheck.

Jan 5, 2022
    Removed pause hotkey that would close main GUI.
    Fixed Gem Farm window's settings display for first three values.
    Fixed spam keys not working during single champion leveling.
    Added Jimothy Addon.
    Removed DLL dependencies.
    Created new functions for force converting Briv stacks on hard restarts (game closes to reset adventure).

Jan 3, 2022
    Added fix for click damage leveling not working for different keyboard layouts.
    Added a potential fix for DashWait not working correctly on EGS clients.

Jan 2, 2022
    Fix for inventory view on EGS not having names for all items.
    When Havilar is detected in save formation 1, the script will attempt to level her and summon Dembo at the start of each run.
    Added an Addon that adds a button to BrivGemFarm to change the game's location. (Temporary solution)
    Updated some naming to be more consistent.
    Added an error if buying/opening chests has a bad response.
    Added settings in Settings.json and BrivGemFarmSettings.json for setting window starting position top left of screen.
    Add setting (LastZoneBuffer) to BrivGemFarmSettings for adjusting the amount of levels allowed after StackFarm before a manual reset occurs. (Default is 41)
    Add setting (DashWaitBuffer) to BrivGemFarmSettings for adjusting the amount of time that will be added to Shandie's Dashwait (Default is 0).

Jan 1, 2022
    Updated some documentation.
    Fix for reading incorrect game instance for BPH.
    Added memory offset for CoreID (unused).
    Updated OpenIC to hopefully prevent multiple instances of IC opening.

Dec 31, 2021
    Fixed class instantiations to not have ()
    Added extended functions for Briv (RestartAdventure and SetUserCredentials)
    Added CLR.ahk for interpreting and using managed DLLs (i.e. compiled in C#).
    Included Ionic.Zlib.dll to compress/decompress data.
    Created a DLL wrapper (GzipWrapper.dll) for Ionic that allows use of its static functions.
    Included generic save string creation in GzipWrapper.
    Created IC_SaveHelper_Class to manage compression and encryption for saves with gzip and md5.
    Fix for closing after reset.
    Fix for not recording stats when doing manual reset.

Dec 29, 2021
    Configuring for public release.
